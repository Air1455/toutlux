parameters:
    app.url: '%env(APP_URL)%'
    app.name: '%env(APP_NAME)%'
    app.upload_max_size: '%env(int:UPLOAD_MAX_SIZE)%'
    app.mobile_url: '%env(MOBILE_APP_URL)%'
    app.email.from_address: '%env(EMAIL_FROM_ADDRESS)%'
    app.email.from_name: '%env(EMAIL_FROM_NAME)%'
    app.email.admin: '%env(ADMIN_NOTIFICATION_EMAIL)%'
    app.admin.default_email: '%env(DEFAULT_ADMIN_EMAIL)%'
    app.admin.default_password: '%env(DEFAULT_ADMIN_PASSWORD)%'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Controllers
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # Normalizers with baseUrl injection
    App\Serializer\MediaObjectNormalizer:
        arguments:
            $baseUrl: '%app.url%'
        tags:
            - { name: 'serializer.normalizer', priority: 64 }

    App\Serializer\PropertyImageNormalizer:
        arguments:
            $baseUrl: '%app.url%'
        tags:
            - { name: 'serializer.normalizer', priority: 64 }

    # User Context Builder
    App\Serializer\UserContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments:
            $decorated: '@.inner'

    # Event Listeners
    App\EventListener\JWTCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\EventListener\JWTDecodedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }

    App\EventListener\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }

    App\EventListener\ExceptionListener:
        arguments:
            $environment: '%kernel.environment%'
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: -50 }

    App\EventListener\CorsListener:
        arguments:
            $corsAllowOrigin: '%env(CORS_ALLOW_ORIGIN)%'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    # Event Subscribers (autoconfigured)
    App\EventSubscriber\:
        resource: '../src/EventSubscriber/'

    # Doctrine Extensions
    App\Doctrine\Extension\CurrentUserExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
            - { name: api_platform.doctrine.orm.query_extension.item }

    # State Providers/Processors for API Platform 4.1
    App\State\PropertyStateProvider:
        tags:
            - { name: api_platform.state_provider }

    App\State\PropertyStateProcessor:
        tags:
            - { name: api_platform.state_processor }

    App\State\UserStateProvider:
        tags:
            - { name: api_platform.state_provider }

    App\State\UserStateProcessor:
        tags:
            - { name: api_platform.state_processor }

    # Validators
    App\Validator\UniqueEmailValidator:
        tags:
            - { name: validator.constraint_validator }

    App\Validator\ValidDocumentValidator:
        tags:
            - { name: validator.constraint_validator }

    # Commands with parameters
    App\Command\CreateAdminCommand:
        arguments:
            $defaultEmail: '%app.admin.default_email%'
            $defaultPassword: '%app.admin.default_password%'

    # Services with specific configuration
    App\Service\NotificationService:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $messageBus: '@messenger.bus.default'
            $logger: '@logger'

    App\Service\Auth\JWTService:
        arguments:
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'
            $jwtTTL: '%env(int:JWT_TTL)%'

    App\Service\Auth\GoogleAuthService:
        arguments:
            $googleClientId: '%env(GOOGLE_CLIENT_ID)%'
            $googleClientSecret: '%env(GOOGLE_CLIENT_SECRET)%'

    App\Service\Email\EmailService:
        arguments:
            $environment: '%kernel.environment%'

    App\Service\Upload\FileUploadService:
        arguments:
            $uploadsDirectory: '%kernel.project_dir%/public/uploads'

    App\Service\Upload\ImageOptimizationService:
        arguments:
            $logger: '@logger'

    # Validation Groups Generator
    App\Validator\ValidationGroups\UserValidationGroupsGenerator:
        tags:
            - { name: 'api_platform.validation_groups_generator' }

    # Service Message Validation (manquait)
    App\Service\Message\MessageValidationService:
        arguments:
            $logger: '@logger'

security:

    # Password hashers
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # User providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Admin firewall
        admin:
            lazy: true
            pattern: ^/admin
            provider: app_user_provider
            form_login:
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_dashboard
                username_parameter: email
                password_parameter: password
            logout:
                path: admin_logout
                target: admin_login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week

        # API Login endpoints
        login:
            pattern: ^/api/auth/login
            stateless: true
            json_login:
                check_path: /api/auth/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # API Refresh token
        refresh:
            pattern: ^/api/auth/refresh
            stateless: true
            refresh_jwt: ~

        # API endpoints
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    # Role hierarchy
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER, ROLE_MODERATOR]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # Access control
    access_control:
        # Admin routes
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }

        # API Public routes
        - { path: ^/api/auth/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/google, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/verify-email, roles: PUBLIC_ACCESS }
        - { path: ^/api/properties, methods: [GET], roles: PUBLIC_ACCESS }

        # API Protected routes
        - { path: ^/api/profile, roles: ROLE_USER }
        - { path: ^/api/messages, roles: ROLE_USER }
        - { path: ^/api/notifications, roles: ROLE_USER }
        - { path: ^/api, roles: ROLE_USER }
